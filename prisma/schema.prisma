// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["mongoDb"]
}

enum Status {
    INATIVO
    ATIVO
}

model Grupo {
    id          String      @id @default(dbgenerated()) @map("_id") @db.ObjectId
    nome        String      @unique
    usuarios    Usuario[]
    @@map("grupos")
}

model Usuario {
    id          String      @id @default(dbgenerated()) @map("_id") @db.ObjectId
    nome        String
    email       String      @unique
    senha       String
    grupo       Grupo       @relation(fields:[grupoId], references:[id])
    grupoId     String      @db.ObjectId
    pacientes   Paciente[]
    medicos     Medico[]
    @@map("usuarios")
}

model UF {
    id          String      @id @default(dbgenerated()) @map("_id") @db.ObjectId
    nome        String      @unique
    cidades     Cidade[]
    @@map("estados")
}

model Cidade {
    id          String      @id @default(dbgenerated()) @map("_id") @db.ObjectId
    nome        String      @unique
    ufs         UF          @relation(fields:[ufId], references:[id])
    ufId        String      @db.ObjectId
    bairros     Bairro[]
    @@map("cidades")
}

model Bairro {
    id          String      @id @default(dbgenerated()) @map("_id") @db.ObjectId
    nome        String      @unique
    cidade      Cidade      @relation(fields:[cidadeId], references:[id])
    cidadeId    String      @db.ObjectId
    enderecos   Endereco[]
    @@map("bairros")
}

model Endereco {
    id          String      @id @default(dbgenerated()) @map("_id") @db.ObjectId
    cep         String
    logradouro  String
    numero      String
    complemento String
    bairro      Bairro      @relation(fields:[bairroId], references:[id])
    bairroId    String      @db.ObjectId
    empresas    Empresa[]
    pacientes   Paciente[]
    @@index([cep, logradouro])
    @@map("enderecos")
}

model Empresa {
    id              String      @id @default(dbgenerated()) @map("_id") @db.ObjectId
    cnpj            String      @unique
    nome            String
    nomeFantasia    String
    telefone        String
    endereco        Endereco    @relation(fields: [enderecoId], references: [id])
    enderecoId      String      @db.ObjectId
    consultas       Consulta[]
    @@index([nome, nomeFantasia, telefone])
    @@map("empresas")
}

model Especialidade {
    id              String      @id @default(dbgenerated()) @map("_id") @db.ObjectId
    nome            String      @unique
    medicos         Medico[]
    @@map("especialidades")
}

model Medico {
    id              String          @id @default(dbgenerated()) @map("_id") @db.ObjectId
    crm             String          @unique
    especialidade   Especialidade   @relation(fields: [especialidadeId], references: [id])
    especialidadeId String          @db.ObjectId
    consultas       Consulta[]
    usuario         Usuario         @relation(fields: [usuarioId], references: [id])
    usuarioId       String          @db.ObjectId
    @@map("medicos")
}

model Convenio {
    id                      String      @id @default(dbgenerated()) @map("_id") @db.ObjectId
    codigoIdentificacao     String      @unique
    produto                 String
    plano                   String
    cobertura               String
    acomodacao              String
    cns                     String?
    empresa                 String
    validade                DateTime
    pacientes               Paciente[]
    @@index([acomodacao, cns, empresa])
    @@map("convenios")
}

model Paciente {
    id              String      @id @default(dbgenerated()) @map("_id") @db.ObjectId
    cpf             String      @unique
    dataNascimento  DateTime
    convenio        Convenio    @relation(fields: [convenioId], references: [id])
    convenioId      String      @db.ObjectId
    endereco        Endereco    @relation(fields: [enderecoId], references: [id])
    enderecoId      String      @db.ObjectId
    consultas       Consulta[]
    usuario         Usuario     @relation(fields: [usuarioId], references: [id])
    usuarioId       String      @db.ObjectId @unique
    @@index([dataNascimento])
    @@map("pacientes")
}

model Consulta {
    id          String      @id @default(dbgenerated()) @map("_id") @db.ObjectId
    dataHora    DateTime    @default(now())
    empresa     Empresa     @relation(fields:[empresaId], references:[cnpj])
    empresaId   String
    medico      Medico      @relation(fields:[medicoId], references:[id])
    medicoId    String      @db.ObjectId
    paciente    Paciente    @relation(fields:[pacienteId], references:[id])
    pacienteId  String      @db.ObjectId
    receita     Receita     @relation(fields:[receitaId], references:[id])
    receitaId   String      @db.ObjectId
    @@index([dataHora])
    @@map("consultas")
}

model Receita {
    id              String          @id @default(dbgenerated()) @map("_id") @db.ObjectId
    medicamentos    Medicamento[]
    consultas       Consulta[]
    @@map("receitas")
}

model Medicamento {
    id              String  @id @default(dbgenerated()) @map("_id") @db.ObjectId
    receita         Receita @relation(fields: [receitaId], references: [id])
    receitaId       String  @db.ObjectId
    uso             String
    tratamento      String
    formula         String
    dosagem         String
    concentracao    String
    quantidade      Int     @db.Int
    dias            Int     @db.Int
    frequenciaH     Int     @db.Int
    orientacoes     String
    @@index([uso, tratamento, formula])
    @@map("medicamentos")
}

model Remedio {
    id                  String      @id @default(dbgenerated()) @map("_id") @db.ObjectId
    gtin                String      @unique
    nome                String
    laboratorio         String
    imagemCaixa         String
    imagemCodigoBarras  String
    precoMin            Float
    precoMed            Float
    precoMax            Float
    idProduto           Int?
    registro            String?
    bula                String?
    criacao             DateTime    @default(now())
    modificacao         DateTime    @updatedAt
    status              Status      @default(ATIVO)
    @@index([nome, idProduto, registro])
    @@map(name:"remedios")
}